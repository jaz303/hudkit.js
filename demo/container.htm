<!DOCTYPE>

<html>
  <head>
    <title>hudkit demo</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <link rel='stylesheet' href='../css/hudkit.css'></link>
    <script src='bundle.js'></script>
    <script>
      function init() {

        var buttons = hk.buttonBar();

        var button1 = hk.button();
        button1.bindAction(hk.action(function() {
            split.toggleWidgetAtIndex(0);
        }));

        var action2 = hk.action(function() { console.log("BUTTON 2"); });
        var button2 = hk.button();
        button2.bindAction(action2);

        // action2.disable();

        buttons.addButton(button1)
               .addButton(button2);

        var split = hk.splitPane();
        split.setOrientation(hk.k.SPLIT_PANE_VERTICAL);

        var b1 = hk.box(), b2 = hk.box();

        b1.setBackgroundColor('#303030');
        b2.setBackgroundColor('#505050');

        split.setLeftWidget(b1);
        split.setRightWidget(b2);

        var panel = hk.panel();
        panel.addChild('buttons', buttons);
        panel.addChild('split', split);

        panel.setLayout(function(c, x, y, width, height) {
            
            if (c.buttons)
                c.buttons.setBounds(0, 0, 20, height);

            if (c.split)
                c.split.setBounds(28, 0, width - 28, height);
        
        });

        hk.root.setRootWidget(panel);

        document.addEventListener('keypress', function(evt) {
            if (String.fromCharCode(evt.charCode) == 't') {
                split.toggleWidgetAtIndex(0);
            }
        });

        var toolbar = hk.toolbar();

        var a1 = hk.action(function() {
            console.log("FOO");
        }, {title: 'Foo 1'});

        var a2 = hk.action(function() {
            console.log("BAR");
        }, {title: 'Bar 2'});

        toolbar.addAction(a1);
        toolbar.addAction(a2);

        a1.setTitle("THIS IS ACTION 1");
        a2.setEnabled(false);

        var k1 = hk.knob();
        k1.value.connect(function(v) {
            console.log("k1 = " + v);
        });
        k1.setMinValue(75);
        k1.setMaxValue(125);
        toolbar.addWidget(k1);

        var k2 = hk.knob();
        k2.value.connect(function(v) {
            console.log("k2 = " + v);
        });
        toolbar.addWidget(k2);

        var k3 = hk.knob();
        k3.value.connect(function(v) {
            console.log("k3 = " + v);
        });
        toolbar.addWidget(k3);

        // var cb = hk.checkbox();
        // cb.value.connect(function(src, value) {
        //     console.log("checkbox = " + value);
        // });
        // toolbar.addWidget(cb);

        // var t1 = hk.textField();
        
        // t1.onChange.connect(function(src, value) {
        //     console.log("textfield value = " + value);
        // });

        // t1.onAction.connect(function(src, value) {
        //     console.log("textfield action = " + value);
        // });

        // toolbar.addWidget(t1);

        // var s1 = hk.select();
        // toolbar.addWidget(s1);

        var slider1 = hk.horizontalSlider();
        slider1.value.connect(function(v) {
            console.log("slider1 = " + v);
        });
        slider1.setCaption("Volume");
        slider1.setMinValue(10);
        slider1.setMaxValue(50);
        toolbar.addWidget(slider1);

        hk.root.setToolbar(toolbar);

        toolbar.addAction(a1, hk.k.TOOLBAR_ALIGN_RIGHT);
        toolbar.addAction(a2, hk.k.TOOLBAR_ALIGN_RIGHT);
        

      }
    </script>
  </head>
  <body onload='hkinit(); init();'>
  </body>
</html>
